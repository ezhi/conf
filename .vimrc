set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab
set smarttab
set shiftround

set autoindent
set smartindent

set incsearch
"set hlsearch

set ignorecase smartcase
set wrap
set ruler
set scrolloff=4
set showmatch
set laststatus=2

set fencs=utf8,cp1251,koi8-r

set tags=tags;/
set path+=~/src/trunk/arcadia

autocmd BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$") | exe "normal g'\"" | endif

autocmd BufEnter * let &titlestring = system("echo $USER@ | grep -v '^ezhi@$'") . substitute(hostname(), "\\.[A-Z-]*\\.[A-Z-]*$", "", "") . ": " . expand("%:t")

let &titlestring = "vim"

if &term == "screen"
    set t_ts=k
    set t_fs=\
    autocmd BufEnter * let &titlestring =  expand("%:t") . " "
endif
if &term == "screen" || &term == "xterm"
    set title
endif

" Perl settings
let perl_extended_vars=1
let perl_want_scope_in_variables=1
let perl_include_pod=1

"set foldmethod=syntax

" that's for taglist
"set Tlist_Inc_Winwidth=0
"set number
"
syntax on

noremap <UP> <NOP>
noremap <DOWN> <NOP>
noremap <LEFT> <NOP>
noremap <RIGHT> <NOP>
noremap <PAGEUP> <NOP>
noremap <PAGEDOWN> <NOP>

inoremap <UP> <NOP>
inoremap <DOWN> <NOP>
inoremap <LEFT> <NOP>
inoremap <RIGHT> <NOP>
inoremap <PAGEUP> <NOP>
inoremap <PAGEDOWN> <NOP>

" navigate through top level blocks with k&r style opening braces
map [[ ?{<CR>e99[{
map ][ /}<CR>b99]}
map ]] j0[[%/{<CR>
map [] k$][%?}<CR>

map –π q
map —Ü w
map —É e
map –∫ r
map –µ t
map –Ω y
map –≥ u
map —à i
map —â o
map –∑ p
map —Ö [
map —ä ]
map —Ñ a
map —ã s
map –≤ d
map –∞ f
map –ø g
map —Ä h
map –æ j
map –ª k
map –¥ l
map –∂ ;
map —ç '
map —è z
map —á x
map —Å c
map –º v
map –∏ b
map —Ç n
map —å m
map –± ,
map —é .
map –ô Q
map –¶ W
map –£ E
map –ö R
map –ï T
map –ù Y
map –ì U
map –® I
map –© O
map –ó P
map –• {
map –™ }
map –§ A
map –´ S
map –í D
map –ê F
map –ü G
map –† H
map –û J
map –õ K
map –î L
map –ñ :
map –≠ "
map –Ø Z
map –ß X
map –° C
map –ú V
map –ò B
map –¢ N
map –¨ M
map –ë <
map –Æ >

map <Leader>ps bevT 

autocmd BufNewFile *:* call MyOpen(expand("<afile>"))
"autocmd BufReadPre echo "*"

"autocmd BufReadPre *:* exec 'file ' . substitute(expand('%'), ':.*', '', '')

function! MyOpen(filename)
  bdel
  exec "edit " . substitute(a:filename, ':.*', '', '')
  exec ":" . substitute(a:filename, '.*:', '', '')
  doau BufNewFile
endfunction

"autocmd BufWritePost ~/.vimrc   so ~/.vimrc
